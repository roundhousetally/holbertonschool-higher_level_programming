The ``matrix_divided`` module
=============================

Testing ``matrix_divided`` Use:
-------------------------------

import module:
       >>> md = __import__("2-matrix_divided").matrix_divided

# TESTS
# Matrix can be ints or floats
# Original Matrix unchanged by division

  	   >>> matrix = [
	   ... [1.2, 3.4, 5.66],
	   ... [4.5, 3, 7.88],
	   ... ]
	   >>> print(md(matrix, 2))
	   [[0.6, 1.7, 2.83], [2.25, 1.5, 3.94]]
	   >>> print(matrix)
	   [[1.2, 3.4, 5.66], [4.5, 3, 7.88]]

# Matrix cannot be divided by 0
  	   >>> print(md(matrix, 0))
	   Traceback (most recent call last):
	   ...
	   ZeroDivisionError: division by zero

# Div must be a number
      	   >>> print(md(matrix, "h"))
	   Traceback (most recent call last):
	   ...
	   TypeError: div must be a number

# Matrix must be a matrix
  	 >>> matrix = "lol wut"
	 >>> print(md(matrix, 1))
	 Traceback (most recent call last):
	 ...
	 TypeError: matrix must be a matrix (list of lists) of integers/floats

	 >>> matrix = [2, 3, 7]
	 >>> print(md(matrix, 3))
	 Traceback (most recent call last):
	 ...
	 TypeError: matrix must be a matrix (list of lists) of integers/floats


# Matrix cannot be empty
  	 >>> matrix = []
	 >>> print(md(matrix, 1))
	 Traceback (most recent call last):
	 ...
	 TypeError: matrix must be a matrix (list of lists) of integers/floats

# Matrix elements must be an integer or float
  	 >>> matrix = [
	 ... [2, 'r', 5],
	 ... [2, 4, 6]
	 ... ]
	 >>> print(md(matrix, 3))
	 Traceback (most recent call last):
	 ...
	 TypeError: matrix must be a matrix (list of lists) of integers/floats

# Matrix rows must be of equal length
  	 >>> matrix = [
	 ... [1, 2, 3],
	 ... [1, 2]
	 ... ]
	 >>> print(md(matrix, 4))
	 Traceback (most recent call last):
	 ...
	 TypeError: Each row of the matrix must have the same size
